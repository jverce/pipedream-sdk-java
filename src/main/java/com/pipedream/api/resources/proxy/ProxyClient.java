/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.pipedream.api.resources.proxy;

import com.pipedream.api.core.ClientOptions;
import com.pipedream.api.core.RequestOptions;
import com.pipedream.api.resources.proxy.requests.ProxyDeleteRequest;
import com.pipedream.api.resources.proxy.requests.ProxyGetRequest;
import com.pipedream.api.resources.proxy.requests.ProxyPatchRequest;
import com.pipedream.api.resources.proxy.requests.ProxyPostRequest;
import com.pipedream.api.resources.proxy.requests.ProxyPutRequest;

public class ProxyClient {
    protected final ClientOptions clientOptions;

    private final RawProxyClient rawClient;

    public ProxyClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawProxyClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawProxyClient withRawResponse() {
        return this.rawClient;
    }

    public Object get(String url64, ProxyGetRequest request) {
        return this.rawClient.get(url64, request).body();
    }

    public Object get(String url64, ProxyGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(url64, request, requestOptions).body();
    }

    public Object post(String url64, ProxyPostRequest request) {
        return this.rawClient.post(url64, request).body();
    }

    public Object post(String url64, ProxyPostRequest request, RequestOptions requestOptions) {
        return this.rawClient.post(url64, request, requestOptions).body();
    }

    public Object put(String url64, ProxyPutRequest request) {
        return this.rawClient.put(url64, request).body();
    }

    public Object put(String url64, ProxyPutRequest request, RequestOptions requestOptions) {
        return this.rawClient.put(url64, request, requestOptions).body();
    }

    public Object delete(String url64, ProxyDeleteRequest request) {
        return this.rawClient.delete(url64, request).body();
    }

    public Object delete(String url64, ProxyDeleteRequest request, RequestOptions requestOptions) {
        return this.rawClient.delete(url64, request, requestOptions).body();
    }

    public Object patch(String url64, ProxyPatchRequest request) {
        return this.rawClient.patch(url64, request).body();
    }

    public Object patch(String url64, ProxyPatchRequest request, RequestOptions requestOptions) {
        return this.rawClient.patch(url64, request, requestOptions).body();
    }
}
